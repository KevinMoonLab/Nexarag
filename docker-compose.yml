services:
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc"]
    ports:
      - "${NEO4J_DB_PORT}:7474"
      - "${NEO4J_APP_PORT}:7687"
    volumes:
      - ${NEO4J_VOLUME}:/data
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USERNAME}", "-p", "${NEO4J_PASSWORD}", "MATCH (n) RETURN COUNT(n);"]
      interval: 10s
      timeout: 5s
      retries: 5

  nexarag.rabbitmq:
    image: rabbitmq:3.11-management
    container_name: nexarag.rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "${RABBIT_QUEUE_PORT}:5672"
      - "${RABBIT_APP_PORT}:15672"
    volumes:
      - ${RABBITMQ_VOLUME}:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  nexarag.api:
    image: nexarag.api:latest
    build:
      context: ./backend/src
      dockerfile: api/Dockerfile
    container_name: nexarag.api
    restart: unless-stopped
    ports:
      - 8000:8000
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: ${NEO4J_USERNAME}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      NEO4J_DATABASE: neo4j
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      OLLAMA_BASE_URL: http://ollama:11434
    depends_on:
      neo4j:
        condition: service_healthy
      nexarag.rabbitmq:
        condition: service_healthy
    volumes:
      - ${DOCS_VOLUME}:/docs

  nexarag.frontend:
    image: nexarag.frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nexarag.frontend
    restart: unless-stopped
    ports:
      - ${API_PORT}:80
    depends_on:
      - nexarag.api

  nexarag.db:
    image: nexarag.db:latest
    build:
      context: ./backend/src
      dockerfile: db/Dockerfile
    container_name: nexarag.db
    restart: unless-stopped
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: ${NEO4J_USERNAME}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      NEO4J_DATABASE: neo4j
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
    depends_on:
      neo4j:
        condition: service_healthy
      nexarag.rabbitmq:
        condition: service_healthy

  nexarag.kg:
    image: nexarag.kg:latest
    build:
      context: ./backend/src
      dockerfile: kg/Dockerfile
    container_name: nexarag.kg
    restart: unless-stopped
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: ${NEO4J_USERNAME}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      NEO4J_DATABASE: neo4j
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      OLLAMA_BASE_URL: http://ollama:11434
    volumes:
      - ${DOCS_VOLUME}:/docs
    depends_on:
      neo4j:
        condition: service_healthy
      nexarag.rabbitmq:
        condition: service_healthy

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ${OLLAMA_VOLUME}:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
